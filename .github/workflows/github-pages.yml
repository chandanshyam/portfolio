# Deploy to GitHub Pages
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches: ["main"]
  # Allows manual deployment from Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for proper git info

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-react-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-react-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: Build React application
        run: npm run build
        env:
          NODE_ENV: production
          PUBLIC_URL: "https://cparam.me"
          CI: false

      - name: Verify build output
        run: |
          if [ ! -d "build" ]; then
            echo "Error: 'build' directory not found. Build failed."
            exit 1
          fi
          echo "Build successful. Generated $(find build -type f | wc -l) files."
          du -sh build/

      - name: Ensure .nojekyll exists in output
        run: |
          if [ ! -f "build/.nojekyll" ]; then
            touch build/.nojekyll
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  # Deployment job
  deploy:
    name: Deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
